version: "3.3"

services:
  traefik:
    image: traefik:v2.5.6
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--log.level=INFO"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik_proxy"
      - "--providers.file.filename=/etc/traefik/config/nextcloud.yaml"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
      - "--entryPoints.web-secure.forwardedHeaders.insecure"
      - "--entrypoints.web.http.redirections.entryPoint.to=web-secure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

      - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencryptresolver.acme.email=${LE_EMAIL}"
      - "--certificatesresolvers.letsencryptresolver.acme.storage=/etc/traefik/acme.json"

      #- "--log.filePath=/etc/traefik/traefik.log"
      #- "--accesslog=true"
      #- "--accesslog.format=json"
      #- "--accessLog.filters.statusCodes=400-499"
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik_proxy

  nextcloud-db:
    image: postgres:14.1
    container_name: nextcloud-db
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud

  nextcloud-redis:
    image: redis:6.2.6-alpine
    container_name: nextcloud-redis
    hostname: nextcloud-redis
    command: redis-server --requirepass ${REDIS_HOST_PASSWORD}
    networks:
      - service_network
    restart: always

  nextcloud-app:
    image: nextcloud:23.0.0
    container_name: nextcloud-app
    hostname: ${NEXTCLOUD_FQDN}
    restart: always
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    environment:
      - REDIS_HOST=nextcloud-redis
      - REDIS_HOST_PASSWORD=${REDIS_HOST_PASSWORD}
      - OVERWRITEHOST=${NEXTCLOUD_FQDN}
      - OVERWRITEPROTOCOL=https
      - overwrite.cli.url=https://${NEXTCLOUD_FQDN}
      - NEXTCLOUD_TRUSTED_DOMAINS='${NEXTCLOUD_FQDN}'
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_HOST=nextcloud-db
      - APACHE_DISABLE_REWRITE_IP=1
      - TRUSTED_PROXIES=172.18.0.1
    volumes:
      - ./app:/var/www/html
      - ./config:/var/www/config
      - ./files:/var/www/html/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.entrypoints=web-secure"
      - "traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_FQDN}`)"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.nextcloud.middlewares=chain-nextcloud@file"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
    networks:
      - traefik_proxy
      - service_network

  nextcloud-cron:
    image: nextcloud:23.0.0
    container_name: nextcloud-cron
    restart: unless-stopped
    volumes:
      - ./app:/var/www/html
      - ./config:/var/www/config
      - ./files:/var/www/html/data
    entrypoint: /cron.sh
    depends_on:
      - nextcloud-db
      - nextcloud-redis

volumes:
  app:
  config:
  files:

networks:
  traefik_proxy:
    external: true
    name: traefik_proxy
  service_network:
    driver: bridge
